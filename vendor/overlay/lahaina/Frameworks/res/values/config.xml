<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2016-2020, The Linux Foundation. 

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are
    met:
        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above
          copyright notice, this list of conditions and the following
          disclaimer in the documentation and/or other materials provided
          with the distribution.
        * Neither the name of The Linux Foundation nor the names of its
          contributors may be used to endorse or promote products derived
          from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
    WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
    ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
    OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
    IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
-->
<resources>
    <!-- Control whether the always on display mode is available. This should only be enabled on
         devices where the display has been tuned to be power efficient in DOZE and/or DOZE_SUSPEND
         states. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
    on the headphone/microphone jack. When false use the older uevent framework -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

   <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
       autodetected from the Configuration. -->
   <bool name="config_showNavigationBar">true</bool>

    <!-- Average Current for bluetooth controller when idle. 0 by default-->
    <integer translatable="false" name="config_bluetooth_idle_cur_ma">6</integer>

    <!-- Average Current for bluetooth controller when receiving. 0 by default-->
    <integer translatable="false" name="config_bluetooth_rx_cur_ma">28</integer>

    <!-- Average Current for bluetooth controller when transmitting. 0 by default-->
    <integer translatable="false" name="config_bluetooth_tx_cur_ma">36</integer>

    <!-- Operating volatage for bluetooth controller. 0 by default-->
    <integer translatable="false" name="config_bluetooth_operating_voltage_mv">3700</integer>

   <!-- Package names to use with vendor iwlan implementation. -->
   <string name="config_wlan_data_service_package" translatable="false">vendor.qti.iwlan</string>
   <string name="config_wlan_network_service_package" translatable="false">vendor.qti.iwlan</string>
   <string name="config_qualified_networks_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- Default list of files pinned by the Pinner Service -->
   <string-array translatable="false" name="config_defaultPinnerServiceFiles">
       <item>"/system/framework/arm64/boot-framework.oat"</item>
       <item>"/system/framework/arm64/boot-QPerformance.oat"</item>
       <item>"/system/framework/arm64/boot-UxPerformance.oat"</item>
       <item>"/system/framework/framework.jar"</item>
       <item>"/system/framework/oat/arm64/services.odex"</item>
       <item>"/system/framework/services.jar"</item>
       <item>"/apex/com.android.media/javalib/updatable-media.jar"</item>
       <item>"/system/lib64/libsurfaceflinger.so"</item>
   </string-array>

    <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
         when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
         where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
         and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors" translatable="false" >
        <item>0:2:15</item>  <!-- ID0:Fingerprint:Strong -->
        <item>1:8:15</item>  <!-- ID1:Face:Strong -->
    </string-array>

</resources>

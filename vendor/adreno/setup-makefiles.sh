#!/bin/bash
#
# Copyright (C) 2021 Paranoid Android
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e

# Required!
export COMPONENT=adreno
export VENDOR=qcom/common/vendor

"../setup-makefiles.sh" "$@"

# Determine Android sources root
MY_DIR="${BASH_SOURCE%/*}"
if [[ ! -d "${MY_DIR}" ]]; then MY_DIR="${PWD}"; fi

ANDROID_ROOT="${MY_DIR}/../../../../.."

# Define qtimapper shim patched libraries directory and create it
QTIMAPPER_PATCHED_DIR="${ANDROID_ROOT}/vendor/${VENDOR}/${COMPONENT}/qtimapper-shim/patched"
mkdir -p "${QTIMAPPER_PATCHED_DIR}"

# Define vendor/adreno blobs directory
NON_PATCHED_DIR="${ANDROID_ROOT}/vendor/${VENDOR}/${COMPONENT}/proprietary"

# Libraries which require qtimapper shim patch
QTIMAPPER_PATCH_REQUIRED=(
    egl/eglSubDriverAndroid.so
    hw/vulkan.adreno.so
    libCB.so
)

# Replace android and qti mapper 3-4.0 with mappershim
apply_qtimapper_shim_patch() {
    sed -i 's/android\.hardware\.graphics\.mapper@[3-4]\.0\.so/android\.hardware\.graphics\.mappershim\.so/g' "$1"
    sed -i 's/vendor\.qti\.hardware\.display\.mapper@[3-4]\.0\.so/vendor\.qti\.hardware\.display\.mappershim\.so/g' "$1"
}

# Add library to qtimapper shim makefile
add_library_to_qtimapper_mk() {
    MODULE_PATH_64="$(sed "s#${ANDROID_ROOT}/##g" <<< "$1")"
    MODULE_PATH_32="$(sed "s#${ANDROID_ROOT}/##g" <<< "$2")"
    LOCAL_MODULE_PATH_64="$(sed "s#${QTIMAPPER_PATCHED_DIR}/vendor/##g" <<< "$1")"
    LOCAL_MODULE_PATH_32="$(sed "s#${QTIMAPPER_PATCHED_DIR}/vendor/##g" <<< "$2")"

    echo -n \
    " \\
    ${MODULE_PATH_64}:\$(TARGET_COPY_OUT_VENDOR)/${LOCAL_MODULE_PATH_64} \\
    ${MODULE_PATH_32}:\$(TARGET_COPY_OUT_VENDOR)/${LOCAL_MODULE_PATH_32}" \
    >> "${QTIMAPPER_PATCHED_DIR}/../patched.mk"
}

# Create qtimapper-shim makefile header in vendor
echo -n \
"# Automatically generated file. DO NOT MODIFY
#
# This file is generated by device/${VENDOR}/${COMPONENT}/setup-makefiles.sh

ifeq (\$(TARGET_USES_QTIMAPPER_SHIM), true)

PRODUCT_COPY_FILES +=" \
> "${QTIMAPPER_PATCHED_DIR}/../patched.mk"

# Apply patch for every library and create makefile entry for it
for i in ${QTIMAPPER_PATCH_REQUIRED[@]}; do
    # Get full path to input and output files
    IN_FILE_64="${NON_PATCHED_DIR}/vendor/lib64/${i}"
    IN_FILE_32="${NON_PATCHED_DIR}/vendor/lib/${i}"
    OUT_FILE_64="${QTIMAPPER_PATCHED_DIR}/vendor/lib64/${i}"
    OUT_FILE_32="${QTIMAPPER_PATCHED_DIR}/vendor/lib/${i}"

    # Create out files directory and copy input files
    mkdir -p "${OUT_FILE_64%/*}"
    mkdir -p "${OUT_FILE_32%/*}"
    cp "${IN_FILE_64}" "${OUT_FILE_64}"
    cp "${IN_FILE_32}" "${OUT_FILE_32}"

    # Use qtimapper-shim
    apply_qtimapper_shim_patch "${OUT_FILE_64}"
    apply_qtimapper_shim_patch "${OUT_FILE_32}"

    # Add library entry to makefile
    add_library_to_qtimapper_mk "${OUT_FILE_64}" "${OUT_FILE_32}"
done

# Append guard end to makefile
echo -e \
"\n
endif" \
>> "${QTIMAPPER_PATCHED_DIR}/../patched.mk"


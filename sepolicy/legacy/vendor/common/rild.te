# Copyright (c) 2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

qmux_socket(rild);
#binder_use(rild)

allow rild ssr_device:chr_file r_file_perms;

allow rild sysfs_esoc:file w_file_perms;

binder_call(rild, mediaserver)
binder_call(rild, audioserver)
binder_call(audioserver, rild)

#Rule for RILD to talk to peripheral manager
use_vendor_per_mgr(rild);

allow rild rild_socket:chr_file r_file_perms;
unix_socket_connect(rild, rild, time_daemon)
allow rild system_health_monitor_device:chr_file r_file_perms;

dontaudit rild domain:dir r_dir_perms;
allow rild time_daemon:unix_stream_socket connectto;
r_dir_file(rild, netmgrd)

#Allow access to netmgrd socket
netmgr_socket(rild);

#allow rild { mediaserver_service audioserver_service }:service_manager find;

# Rule for RILD to talk to peripheral manager
use_vendor_per_mgr(rild);

#diag
userdebug_or_eng(`
    diag_use(rild)
    get_prop(rild, vendor_pd_locater_dbg_prop)
')

allow rild self:qipcrtr_socket create_socket_perms_no_ioctl;;
allow rild self:{ socket qipcrtr_socket } ioctl;
allowxperm rild self:{ socket qipcrtr_socket } ioctl msm_sock_ipc_ioctls;

allow rild diag_device:chr_file rw_file_perms;
allow rild vendor_radio_data_file:dir rw_dir_perms;
allow rild vendor_radio_data_file:file create_file_perms;

allow rild vendor_mbn_data_file:dir r_dir_perms;
allow rild vendor_mbn_data_file:file r_file_perms;

# qcril.so needs access to /vendor/radio/qcril_database/qcril.db
allow rild vendor_file:file lock;

hal_server_domain(rild, hal_secure_element)
add_hwservice(rild, hal_iwlan_hwservice)

add_hwservice(rild, hal_dataconnection_hwservice)
hal_server_domain(rild, hal_dataconnection_qti)

get_prop(rild, radio_control_prop)
set_prop(rild, vendor_xlat_prop)
get_prop(rild, vendor_rild_libpath_prop)
get_prop(rild, vendor_dataqdp_prop)

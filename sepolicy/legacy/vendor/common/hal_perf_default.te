# Copyright (c) 2017-2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type vendor_hal_perf_default, domain, mlstrustedsubject;
hal_server_domain_bypass(vendor_hal_perf_default, vendor_hal_perf)

type vendor_hal_perf_default_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(vendor_hal_perf_default)

# Allow hwbinder call from hal client to server
binder_call(vendor_hal_perf_client, vendor_hal_perf_server)

#Allow AIDL base perf-hal communication
hal_attribute_service(vendor_hal_perf, vendor_hal_perf2_service)
binder_call(vendor_hal_perf_server, servicemanager)

# Add hwservice related rules
add_hwservice(vendor_hal_perf_server, vendor_hal_perf_hwservice)
allow vendor_hal_perf_client vendor_hal_perf_hwservice:hwservice_manager find;

allow vendor_hal_perf_default cgroup:file r_file_perms;
allow vendor_hal_perf_default proc:file rw_file_perms;
allow vendor_hal_perf device_latency:chr_file rw_file_perms;
get_prop(vendor_hal_perf, vendor_freq_prop)
get_prop(vendor_hal_perf, vendor_mpctl_prop)
allow vendor_hal_perf_default mpctl_data_file:dir rw_dir_perms;
allow vendor_hal_perf_default mpctl_data_file:file create_file_perms;
allow vendor_hal_perf_default lm_data_file:dir rw_dir_perms;
allow vendor_hal_perf_default lm_data_file:file create_file_perms;
allow vendor_hal_perf_default sysfs_lib:file w_file_perms;
allow vendor_hal_perf_default proc_meminfo:file r_file_perms;
allow vendor_hal_perf_default self:netlink_generic_socket create_socket_perms_no_ioctl;
allow vendor_hal_perf_default {appdomain}:process getpgid;
hal_client_domain(vendor_hal_perf_default, vendor_hal_iop);
hal_client_domain(vendor_hal_perf_default, vendor_hal_srvctracker);
r_dir_file(vendor_hal_perf_default, appdomain);
allow vendor_hal_perf_default {appdomain}:file rw_file_perms;

allow vendor_hal_perf {
     sysfs_devices_system_cpu
     sysfs_mpdecision
     sysfs_devfreq
     sysfs_mmc_host
     sysfs_scsi_host
     sysfs_kgsl
     sysfs_kgsl_proc
     sysfs_cpu_boost
     sysfs_msm_perf
     sysfs_memory
     sysfs_graphics
     sysfs_msm_power
     sysfs_battery_supply
     sysfs_process_reclaim
}:dir r_dir_perms;

allow vendor_hal_perf {
     sysfs_devices_system_cpu
     sysfs_mpdecision
     sysfs_cpu_boost
     sysfs_msm_perf
     sysfs_kgsl
     sysfs_cpu_boost
     sysfs_msm_perf
     sysfs_memory
     sysfs_graphics
     sysfs_scsi_host
     sysfs_devfreq
     sysfs_mmc_host
     sysfs_msm_power
     sysfs_battery_supply
     sysfs_process_reclaim
     sysfs_kgsl_proc
     sysfs_dm
}:file rw_file_perms;

allow vendor_hal_perf {
    sysfs_devfreq
    sysfs_mmc_host
    sysfs_scsi_host
    sysfs_kgsl
}:lnk_file r_file_perms;

# Allow to self kill capability
allow vendor_hal_perf_default self:capability { kill };

# Allow QSPM access
hal_client_domain(vendor_hal_perf_default, vendor_hal_qspmhal);

# Allow hal_perf to set property
set_prop(vendor_hal_perf_default, vendor_mpctl_prop)
set_prop(vendor_hal_perf_default, vendor_wlc_public_prop)

#Allow Display Config access
hal_client_domain(vendor_hal_perf_default, hal_graphics_composer);

# Allow connecting to thermal_socket
unix_socket_connect(vendor_hal_perf_default, thermal, thermal-engine)

#Allow display driver access
allow vendor_hal_perf_default graphics_device:chr_file rw_file_perms;

# Allow shared memory access
hal_client_domain(vendor_hal_perf_default, hal_allocator);

# Allow perf hal to interact with pasr memory hal
hal_client_domain(vendor_hal_perf_default, hal_pasrmanager_memory);

allow vendor_hal_perf_default block_device:dir { open read search };
allow vendor_hal_perf_default proc_diskstats:file { getattr open read };

allow vendor_hal_perf_default self:capability { sys_nice setuid };

# Rule for vndbinder usage
allow vendor_hal_perf qdisplay_service:service_manager find;
vndbinder_use(vendor_hal_perf);

hal_client_domain(vendor_hal_perf_default, hal_thermal);

allow vendor_hal_perf_default surfaceflinger:process setsched;
allow vendor_hal_perf_default hal_graphics_composer_default:process setsched;
allow vendor_hal_perf_default appdomain:process setsched;
allow vendor_hal_perf_default appdomain:process getsched;
allow vendor_hal_perf_default self:capability sys_nice;
dontaudit vendor_hal_perf_default self:capability dac_override;
dontaudit vendor_hal_perf_default system_server:dir search;
dontaudit vendor_hal_perf_default { domain - appdomain }:process { getsched setsched };

# Copyright (c) 2019, The Linux Foundation. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type vendor_hal_qspmhal_default, domain;
type vendor_hal_qspmhal_default_exec, exec_type, vendor_file_type, file_type;
typeattribute vendor_hal_qspmhal_default untrusted_app_visible_halserver_violators;

init_daemon_domain(vendor_hal_qspmhal_default)

hal_server_domain(vendor_hal_qspmhal_default, vendor_hal_qspmhal)
hal_client_domain(vendor_hal_qspmhal_default, hal_allocator)

binder_call(vendor_hal_qspmhal_client, vendor_hal_qspmhal_server)
binder_call(vendor_hal_qspmhal_server, vendor_hal_qspmhal_client)

hal_attribute_service(vendor_hal_qspmhal, vendor_hal_qspmhal_service)
binder_call(vendor_hal_qspmhal_server, servicemanager)

# Add hwservice related rules
hal_attribute_hwservice(vendor_hal_qspmhal, vendor_hal_qspmhal_hwservice)

#Add permission to create/write file
allow vendor_hal_qspmhal_default vendor_qspmhal_data_file:file  create_file_perms;
allow vendor_hal_qspmhal_default vendor_qspmhal_data_file:dir rw_dir_perms;

allow vendor_hal_qspmhal_default vendor_qspmhal_data_file:dir { add_name create getattr open read remove_name unlink write };
allow vendor_hal_qspmhal_default vendor_qspmhal_data_file:file { open write };

#getprop rule for qspm debug prop
userdebug_or_eng(`get_prop(vendor_hal_qspmhal_default, vendor_qspm_dbg_prop)')

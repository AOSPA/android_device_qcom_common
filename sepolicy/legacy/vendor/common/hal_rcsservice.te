# Copyright (c) 2017, The Linux Foundation. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type hal_rcsservice, domain;
type hal_rcsservice_exec, exec_type, vendor_file_type, file_type;

# Started by init
init_daemon_domain(hal_rcsservice)
net_domain(hal_rcsservice)

# use hwBinder for imsrcsd
hwbinder_use(hal_rcsservice)
# add IUceSerive and IService to Hidl interface
add_hwservice(hal_rcsservice, hal_imsrcsd_hwservice)
get_prop(hal_rcsservice, hwservicemanager_prop)
add_hwservice(hal_rcsservice, hal_imscallinfo_hwservice)
#add imsfactory to HIDl interface
add_hwservice(hal_rcsservice, vendor_hal_imsfactory_hwservice)
# allow read datad property
get_prop(hal_rcsservice, vendor_qcom_ims_prop)

# allow imsrcsd to connect to imsdatad over socket
allow hal_rcsservice self: { socket qipcrtr_socket } create_socket_perms;
allowxperm hal_rcsservice self:{ socket qipcrtr_socket } ioctl msm_sock_ipc_ioctls;

unix_socket_connect(hal_rcsservice, ims, ims)

# allow imsrcsd capabilities
wakelock_use(hal_rcsservice)
allow hal_rcsservice self:capability net_bind_service;

#diag
userdebug_or_eng(`
  diag_use(hal_rcsservice)
')

allow hal_rcsservice self:capability2 wake_alarm;
allow hal_rcsservice sysfs_data:file r_file_perms;
binder_call(hal_rcsservice, vendor_dataservice_app)
userdebug_or_eng(`
  binder_call(hal_rcsservice, radio)
')

set_prop(hal_rcsservice, vendor_ctl_vendor_imsrcsservice_prop)
set_prop(hal_rcsservice, vendor_qcom_ims_prop)

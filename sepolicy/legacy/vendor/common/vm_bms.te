# Copyright (c) 2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#integrated process
type vm_bms, domain;
type vm_bms_exec, exec_type, vendor_file_type, file_type;

#started by init
init_daemon_domain(vm_bms)

#allow vm_bms to visit chr_file
allow vm_bms {
    tmpfs
    vm_bms_device
    battery_data_device
}:chr_file rw_file_perms;

allow vm_bms {
    sysfs_battery_supply
    sysfs_usb_supply
}:dir r_dir_perms;

allow vm_bms {
    sysfs_battery_supply
    sysfs_usb_supply
}:file rw_file_perms;

#allow vm_bms to drop down to system service
allow vm_bms self:capability { setpcap setgid setuid };

#allow vm_bms to block the system suspend and get wake lock
wakelock_use(vm_bms)

#allow start and stop of vm_bms via ctl.start/ctl.stop
set_prop(vm_bms, vendor_vm_bms_prop)
userdebug_or_eng(`
set_prop(vm_bms, vendor_vm_bms_debug_prop)
')

# Copyright (c) 2017 The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type hal_bluetooth_qti, domain;
hal_server_domain(hal_bluetooth_qti, hal_bluetooth)

type hal_bluetooth_qti_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(hal_bluetooth_qti)

# bluetooth properties
set_prop(hal_bluetooth, vendor_bluetooth_prop)

r_dir_file(hal_bluetooth_qti, firmware_file)

allow hal_bluetooth {
    serial_device
    smd_device
}:chr_file rw_file_perms;

#For bluetooth firmware
r_dir_file(hal_bluetooth, bt_firmware_file)

allow hal_bluetooth_qti persist_bluetooth_file:dir rw_dir_perms;
allow hal_bluetooth_qti persist_bluetooth_file:file create_file_perms;
r_dir_file(hal_bluetooth_qti, mnt_vendor_file)
allow hal_bluetooth self:socket create_socket_perms;
allowxperm hal_bluetooth self:socket ioctl msm_sock_ipc_ioctls;
allow hal_bluetooth_qti vendor_bt_data_file:dir ra_dir_perms;
allow hal_bluetooth_qti vendor_bt_data_file:file create_file_perms;

#bt power node access
allow hal_bluetooth {
    smd_device
    bt_device
}:chr_file rw_file_perms;

#diag access
userdebug_or_eng(`
    diag_use(hal_bluetooth)
')

userdebug_or_eng(`
# Logging for backward compatibility
allow hal_bluetooth_qti ramdump_vendor_data_file:file create_file_perms;
allow hal_bluetooth_qti ramdump_vendor_data_file:dir rw_dir_perms;

allow hal_bluetooth proc_sysrq:file w_file_perms;
allow hal_bluetooth_qti qti_debugfs:file r_file_perms;
allow hal_bluetooth_qti qti_debugfs:dir rw_dir_perms;
allow hal_bluetooth_qti self:{ socket qipcrtr_socket } create_socket_perms_no_ioctl;
')

hal_server_domain(hal_bluetooth_qti, hal_fm)
hal_server_domain(hal_bluetooth_qti, hal_btconfigstore)

allow hal_bluetooth_qti vendor_fm_data_file:dir search;
allow hal_bluetooth_qti fm_radio_device:chr_file r_file_perms;
allow hal_bluetooth_qti vendor_fm_data_file:chr_file r_file_perms;
allow hal_bluetooth_qti sysfs_fm:file write;
# allow rw create file access to fm patchdownloader
allow hal_bluetooth_qti vendor_fm_data_file:file create_file_perms;
allow hal_bluetooth_qti vendor_fm_data_file:dir ra_dir_perms;

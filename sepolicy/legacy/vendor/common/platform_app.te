# Copyright (c) 2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Allow platform apps to interact with dtseagleservice
binder_call(platform_app, dtseagleservice)

# Allow platform apps to interact with fido daemon
binder_call(platform_app, fidodaemon)

# Allow platform apps to interact with secota daemon
allow platform_app secotad_service:service_manager find;
binder_call(platform_app, secotad)

allow platform_app imsrcs_service:service_manager find;

# Allow NFC service to be found
allow platform_app nfc_service:service_manager find;

#Allow platform apps to interact with seemp health daemon
binder_call(platform_app, seemp_health_daemon)

# Allow gba_auth_service to be found
allow platform_app gba_auth_service:service_manager find;

# Allow hbtp hal Service to be found
hal_client_domain(platform_app, hal_hbtp)

#for perf-hal call
hal_client_domain(platform_app, vendor_hal_perf)

#allow embms app to access vendor radio property
get_prop(platform_app, vendor_radio_prop)


#allow scve hw service
#allow platform_app hal_scve_hwservice:hwservice_manager find;
hal_client_domain(platform_app, hal_scve)

#allow platform_app to read vendor_mpctl_prop
get_prop(platform_app, vendor_mpctl_prop)
#fm
hal_client_domain(platform_app, hal_fm);
hal_client_domain(platform_app, hal_fingerprint);
allow platform_app fm_radio_device:chr_file r_file_perms;
#allow platform app to access btconfigstore hal
hal_client_domain(platform_app, hal_btconfigstore);

get_prop(platform_app, audio_config_prop)
get_prop(platform_app, vendor_display_notch_prop)
get_prop(platform_app, build_bootimage_prop)
get_prop(platform_app, vendor_pasr_prop)
allow platform_app cgroup:file w_file_perms;

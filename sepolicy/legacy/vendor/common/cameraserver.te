# Copyright (c) 2016, 2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

allow cameraserver camera_data_file:sock_file write;
allow cameraserver gpu_device:chr_file rw_file_perms;
#allow cameraserver mm-qcamerad:unix_dgram_socket sendto;
#changes to access laser device
r_dir_file(cameraserver, input_device);
#Allow surfaceflinger access for camera preview
allow cameraserver surfaceflinger:unix_stream_socket { read write };

# allow cameraserver to communicate with sensors
allow cameraserver sensors_device:chr_file rw_file_perms;
#unix_socket_connect(cameraserver, sensors, sensors);
allow cameraserver system_server:unix_stream_socket { read write };
get_prop(cameraserver, camera_prop)
allow cameraserver self:socket create_socket_perms_no_ioctl;
allow cameraserver graphics_device:dir r_dir_perms;
allow cameraserver sensorservice_service:service_manager find;
allow cameraserver system_file:dir r_dir_perms;

#Allows camera to call ADSP QDSP6 functionality
allow cameraserver qdsp_device:chr_file r_file_perms;
allow cameraserver xdsp_device:chr_file r_file_perms;
get_prop(cameraserver, camera_prop)

#allow cameraserver to read vendor_adsprpc_prop
get_prop(cameraserver, vendor_adsprpc_prop)

#need this in full_treble for camera perview
allow cameraserver hal_allocator:fd use;

# added now for camcorder functionality. need to use HIDL
userdebug_or_eng(`
binder_call(cameraserver, hal_graphics_composer)
')

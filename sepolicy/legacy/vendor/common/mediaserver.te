# Copyright (c) 2019-2020, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

allow mediaserver qdsp_device:chr_file r_file_perms;
allow mediaserver xdsp_device:chr_file r_file_perms;

allow mediaserver self:socket create_socket_perms_no_ioctl;

binder_call(mediaserver, rild)

#qmux_socket(mediaserver)
allow mediaserver camera_data_file:sock_file w_file_perms;

userdebug_or_eng(`
  allow mediaserver camera_data_file:dir rw_dir_perms;
  allow mediaserver camera_data_file:file create_file_perms;
  # Access to audio
  allow mediaserver qti_debugfs:file rw_file_perms;
')

# allow poweroffhandler to binder mediaserver
binder_call(mediaserver, poweroffhandler);

#This is required for thermal sysfs access
r_dir_file(mediaserver, sysfs_thermal);

binder_call(mediaserver, vendor_wfdservice)

#allow mediaserver to access vendor_adsprpc_prop
get_prop(mediaserver, vendor_adsprpc_prop)

binder_call(mediaserver, bootanim);

get_prop(mediaserver, vendor_audio_prop)

get_prop(mediaserver, vendor_sys_video_prop)

allow mediaserver surfaceflinger:unix_stream_socket rw_socket_perms;

hal_client_domain(mediaserver, hal_graphics_composer)
#binder_call(mediaserver, hal_display_config);

hal_client_domain(mediaserver, vendor_hal_qspmhal)

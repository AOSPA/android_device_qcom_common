# Copyright (c) 2020, The Linux Foundation. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#Define Domain for PASR HAL
type vendor_pasrmanager_memory_qti, domain;
type vendor_pasrmanager_memory_qti_exec, exec_type, vendor_file_type, file_type;

# Allow permissions required for this HAL server to offer a
# HAL implementation of the specified type over HwBinder
hal_server_domain(vendor_pasrmanager_memory_qti, vendor_hal_mem_pasrmanager)

# Started by init
init_daemon_domain(vendor_pasrmanager_memory_qti)

# Allow PASR clients to perform binder IPC to PASR HAL server
binder_call(vendor_hal_mem_pasrmanager_client, vendor_hal_mem_pasrmanager_server)

# Add pasrmanager to hwservice_manager and allow it to be discovered
hal_attribute_hwservice(vendor_hal_mem_pasrmanager, vendor_hal_pasrmanager_memory_hwservice)

# Allow access for pasrmanager for reading "/system/devices/memory/*"
allow vendor_pasrmanager_memory_qti vendor_sysfs_system_memory:file rw_file_perms;
allow vendor_pasrmanager_memory_qti vendor_sysfs_system_memory:dir r_dir_perms;

# Read/Write "/sys/kernel/mem-offline/*" sysfs files
allow vendor_pasrmanager_memory_qti vendor_sysfs_mem_offline:file rw_file_perms;
allow vendor_pasrmanager_memory_qti vendor_sysfs_mem_offline:dir r_dir_perms;

# Read /proc/zoneinfo
allow vendor_pasrmanager_memory_qti proc_zoneinfo:file r_file_perms;

# Read /proc/meminfo
allow vendor_pasrmanager_memory_qti proc_meminfo:file r_file_perms;

# Read sysfs directories
allow vendor_pasrmanager_memory_qti sysfs:dir r_dir_perms;

# For reading "vendor.pasr." properties
get_prop(vendor_pasrmanager_memory_qti, vendor_pasr_prop)

hal_client_domain(vendor_pasrmanager_memory_qti, hal_allocator)

#Define Domain
type vendor_agmservice_qti, domain;
type vendor_agmservice_qti_exec, exec_type, vendor_file_type, file_type;

#Make agmservice part of the same domain as hal_audio
hal_server_domain(vendor_agmservice_qti, hal_audio)
binder_call(vendor_agmservice_qti, hal_audio_default)

#Allow for transition from init domain to agmservice
init_daemon_domain(vendor_agmservice_qti)

# Add hwservice related rules
hal_attribute_hwservice(hal_audio, vendor_agm_hwservice)

#Allow access to agm device nodes
allow vendor_agmservice_qti vendor_agm_device:chr_file rw_file_perms;

#Allow access to dmabuf
allow vendor_agmservice_qti dmabuf_system_heap_device:chr_file r_file_perms;

#Allow access to dmabuf_cma
allow vendor_agmservice_qti vendor_dmabuf_audio_ml_heap_device:chr_file r_file_perms;

#Allow access to system-uncached dma heap
allow vendor_agmservice_qti vendor_dmabuf_system_uncached_heap_device:chr_file r_file_perms;

#allow access to agm crash notificaiton sysfs node
allow vendor_agmservice_qti vendor_sysfs_agm:file rw_file_perms;
allow vendor_agmservice_qti vendor_sysfs_agm:dir r_dir_perms;

#Allow qipc socket access for servreg communication
allow vendor_agmservice_qti self:qipcrtr_socket create_socket_perms_no_ioctl;

#Allow to dump in /data/vendor/audio/
allow vendor_agmservice_qti vendor_audio_data_file:dir w_dir_perms;
allow vendor_agmservice_qti vendor_audio_data_file:file create_file_perms;

# agm audio thread needs RT scheduling for LL/ULL audio, allow sys_nice
allow vendor_agmservice_qti self:global_capability_class_set sys_nice;

userdebug_or_eng(`
#Allow for property access
  get_prop(vendor_agmservice_qti,vendor_audio_debug_prop)
#Allow for pd_locater service access
  get_prop(vendor_agmservice_qti, vendor_pd_locater_dbg_prop)
#Allow to access logmask file in /data/vendor
  allow vendor_agmservice_qti vendor_data_file:file r_file_perms;
#allow proc_sysrq access for crash dump
  allow vendor_agmservice_qti proc_sysrq:file rw_file_perms;
')
